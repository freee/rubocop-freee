require: rubocop-rspec

# Checks for create_list usage.
FactoryBot/CreateList:
  Enabled: false

# Check that instances are not being stubbed globally.
RSpec/AnyInstance:
  Enabled: false

# We don't enforce this as we use this technique in a few places.
RSpec/BeforeAfterAll:
  Enabled: false

# Checks `context` block descriptions should start with 'when', or 'with'.
RSpec/ContextWording:
  Enabled: false

# Check that the first argument to the top level describe is the tested class or module.
RSpec/DescribeClass:
  Enabled: true

# Checks that tests use `described_class`.
RSpec/DescribedClass:
  Enabled: false

# Checks that the second argument to `describe` specifies a method.
RSpec/DescribeMethod:
  Enabled: false

# Checks if an example group does not include any tests.
RSpec/EmptyExampleGroup:
  Enabled: true

# Checks for long example.
RSpec/ExampleLength:
  Enabled: false
  Max: 5

# Do not use should when describing your tests.
RSpec/ExampleWording:
  Enabled: true
  CustomTransform:
    be: is
    have: has
    not: does not
  IgnoredWords: []

# Chercks for do not use `expect` in hooks such as `before`.
RSpec/ExpectInHook:
  Enabled: false

# Allows empty line after let for `before` setup and tiny examples.
RSpec/EmptyLineAfterFinalLet:
  Enabled: false

# Checks for consistent style of change matcher.
RSpec/ExpectChange:
  Enabled: false

# Checks the arguments passed to `before`, `around`, and `after`.
RSpec/HookArgument:
  Enabled: true
  EnforcedStyle: implicit

# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: is_expected, should
RSpec/ImplicitExpect:
  Enabled: true
  EnforcedStyle: is_expected

# Checks for the usage of instance variables.
RSpec/InstanceVariable:
  Enabled: false

# Checks that `all` matcher is used instead of iterating over an array.
RSpec/IteratedExpectation:
  Enabled: false

# Checks for `subject` definitions that come after `let` definitions.
RSpec/LeadingSubject:
  Enabled: false

# Checks unreferenced `let!` calls being used for test setup.
RSpec/LetSetup:
  Enabled: false

# Check that chains of messages are not being stubbed.
RSpec/MessageChain:
  Enabled: false

# Checks that message expectations are set using spies.
RSpec/MessageSpies:
  Enabled: false

# Checks for multiple top-level describes.
RSpec/MultipleDescribes:
  Enabled: false

# Checks if examples contain too many `expect` calls.
RSpec/MultipleExpectations:
  Enabled: false

# Checks for explicitly referenced test subjects.
RSpec/NamedSubject:
  Enabled: false

# Checks for nested example groups.
RSpec/NestedGroups:
  Enabled: false

# Enforces the usage of the same method on all negative message expectations.
RSpec/NotToNot:
  EnforcedStyle: not_to
  Enabled: true

# Check for repeated description strings in example groups.
RSpec/RepeatedDescription:
  Enabled: false

# Check for repeated example.
RSpec/RepeatedExample:
  Enabled: false

RSpec/ReturnFromStub:
  Enabled: false

# Checks for stubbed test subjects.
RSpec/SubjectStub:
  Enabled: false

# Prefer using verifying doubles over normal doubles.
RSpec/VerifiedDoubles:
  Enabled: false

# Checks for setup scattered across multiple hooks in an example group.
RSpec/ScatteredSetup:
  Enabled: true
